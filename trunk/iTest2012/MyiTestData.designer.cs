#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iTest2012
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class MyiTestDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertiUserPermission(iUserPermission instance);
    partial void UpdateiUserPermission(iUserPermission instance);
    partial void DeleteiUserPermission(iUserPermission instance);
    partial void InsertiFunction(iFunction instance);
    partial void UpdateiFunction(iFunction instance);
    partial void DeleteiFunction(iFunction instance);
    partial void InsertiUser(iUser instance);
    partial void UpdateiUser(iUser instance);
    partial void DeleteiUser(iUser instance);
    partial void InsertiSubject(iSubject instance);
    partial void UpdateiSubject(iSubject instance);
    partial void DeleteiSubject(iSubject instance);
    partial void InsertiChapter(iChapter instance);
    partial void UpdateiChapter(iChapter instance);
    partial void DeleteiChapter(iChapter instance);
    partial void InsertiQuestion(iQuestion instance);
    partial void UpdateiQuestion(iQuestion instance);
    partial void DeleteiQuestion(iQuestion instance);
    partial void InsertiAnswer(iAnswer instance);
    partial void UpdateiAnswer(iAnswer instance);
    partial void DeleteiAnswer(iAnswer instance);
    partial void InsertiSecurityQuest(iSecurityQuest instance);
    partial void UpdateiSecurityQuest(iSecurityQuest instance);
    partial void DeleteiSecurityQuest(iSecurityQuest instance);
    #endregion
		
		public MyiTestDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyiTestDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyiTestDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyiTestDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyiTestDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<iUserPermission> iUserPermissions
		{
			get
			{
				return this.GetTable<iUserPermission>();
			}
		}
		
		public System.Data.Linq.Table<iFunction> iFunctions
		{
			get
			{
				return this.GetTable<iFunction>();
			}
		}
		
		public System.Data.Linq.Table<iUser> iUsers
		{
			get
			{
				return this.GetTable<iUser>();
			}
		}
		
		public System.Data.Linq.Table<iSubject> iSubjects
		{
			get
			{
				return this.GetTable<iSubject>();
			}
		}
		
		public System.Data.Linq.Table<iChapter> iChapters
		{
			get
			{
				return this.GetTable<iChapter>();
			}
		}
		
		public System.Data.Linq.Table<iQuestion> iQuestions
		{
			get
			{
				return this.GetTable<iQuestion>();
			}
		}
		
		public System.Data.Linq.Table<iAnswer> iAnswers
		{
			get
			{
				return this.GetTable<iAnswer>();
			}
		}
		
		public System.Data.Linq.Table<iSecurityQuest> iSecurityQuests
		{
			get
			{
				return this.GetTable<iSecurityQuest>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_ChangePassword")]
		public int st_ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newpassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, password, newpassword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Check_AllSub_Type_Num")]
		public int st_Check_AllSub_Type_Num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Check_aSub_aType_Num")]
		public int st_Check_aSub_aType_Num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sub, type, num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAdmin")]
		public int st_CheckAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iduser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iduser);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAvailableEmail")]
		public int st_CheckAvailableEmail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(250)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAvailablePermission")]
		public int st_CheckAvailablePermission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string func)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, func);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAvailableSubID")]
		public int st_CheckAvailableSubID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAvailableSubName")]
		public int st_CheckAvailableSubName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string subname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckAvailableUser")]
		public int st_CheckAvailableUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckChapIndex")]
		public int st_CheckChapIndex([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string chapnum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chapnum, subid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckChapName")]
		public int st_CheckChapName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string chapname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chapname, subid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CheckPermission")]
		public int st_CheckPermission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iduser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FuncName", DbType="NVarChar(250)")] string funcName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iduser, funcName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_CountQuestofSub")]
		public int st_CountQuestofSub([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sub, type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_DelQuest")]
		public int st_DelQuest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_DelUser")]
		public int st_DelUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_DelUserFunction")]
		public int st_DelUserFunction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string func)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, func);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_GetImageByID", IsComposable=true)]
		public object st_GetImageByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> img_pk)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), img_pk).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_GetUserInfo")]
		public ISingleResult<st_GetUserInfoResult> st_GetUserInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<st_GetUserInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadAnsID")]
		public int st_LoadAnsID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string bodyans)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid, bodyans);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadBodyAnswers")]
		public ISingleResult<st_LoadBodyAnswersResult> st_LoadBodyAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid);
			return ((ISingleResult<st_LoadBodyAnswersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadBodyQuestOfSub")]
		public ISingleResult<st_LoadBodyQuestOfSubResult> st_LoadBodyQuestOfSub([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid);
			return ((ISingleResult<st_LoadBodyQuestOfSubResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadChapID")]
		public int st_LoadChapID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string chapname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chapname, subid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadChapName")]
		public ISingleResult<st_LoadChapNameResult> st_LoadChapName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> chapid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chapid);
			return ((ISingleResult<st_LoadChapNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadCorrectAnswer")]
		public int st_LoadCorrectAnswer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string ansbody)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid, ansbody);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadFuncID")]
		public int st_LoadFuncID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string func)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), func);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadOneAnsIDCorrect")]
		public int st_LoadOneAnsIDCorrect([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadQuestID")]
		public int st_LoadQuestID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string body)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), body);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadSubjectID")]
		public int st_LoadSubjectID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string subname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_LoadUserID")]
		public int st_LoadUserID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Login")]
		public int st_Login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_RandomIDofSub")]
		public int st_RandomIDofSub([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subid, type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_ResetPass")]
		public int st_ResetPass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string mail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string newpass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, mail, newpass);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_SelectAllChapter", IsComposable=true)]
		public object st_SelectAllChapter([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idSub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(10)")] string level)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub, level).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_SelectAllLevel", IsComposable=true)]
		public object st_SelectAllLevel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idSub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string chapter)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub, chapter).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_SelectAllQuest")]
		public ISingleResult<st_SelectAllQuestResult> st_SelectAllQuest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idSub)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub);
			return ((ISingleResult<st_SelectAllQuestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Test")]
		public int st_Test([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string bodyans)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questid, bodyans);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_SelectAllLevel", IsComposable=true)]
		public object st_SelectAllLevel1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idSub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string chapter)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub, chapter).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_ViewQuestOfAllSub")]
		public ISingleResult<st_ViewQuestOfAllSubResult> st_ViewQuestOfAllSub()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<st_ViewQuestOfAllSubResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_SelectQuest")]
		public ISingleResult<st_SelectQuestResult> st_SelectQuest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idSub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(10)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> chapter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub, level, chapter);
			return ((ISingleResult<st_SelectQuestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Check_AllSub_aLevel_Num")]
		public int st_Check_AllSub_aLevel_Num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> level, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), level, num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_Check_aSub_aLevel_Num")]
		public int st_Check_aSub_aLevel_Num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sub, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> level, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sub, level, num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_RandomIDofSubByLevel")]
		public int st_RandomIDofSubByLevel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> level)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subid, level);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_getImageQuest")]
		public void st_getImageQuest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idquest)
		{
			this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idquest);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iUserPermission")]
	public partial class iUserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iUserID;
		
		private int _iFuncID;
		
		private System.Nullable<int> _iPermission;
		
		private EntityRef<iFunction> _iFunction;
		
		private EntityRef<iUser> _iUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniUserIDChanging(int value);
    partial void OniUserIDChanged();
    partial void OniFuncIDChanging(int value);
    partial void OniFuncIDChanged();
    partial void OniPermissionChanging(System.Nullable<int> value);
    partial void OniPermissionChanged();
    #endregion
		
		public iUserPermission()
		{
			this._iFunction = default(EntityRef<iFunction>);
			this._iUser = default(EntityRef<iUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iUserID
		{
			get
			{
				return this._iUserID;
			}
			set
			{
				if ((this._iUserID != value))
				{
					if (this._iUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniUserIDChanging(value);
					this.SendPropertyChanging();
					this._iUserID = value;
					this.SendPropertyChanged("iUserID");
					this.OniUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFuncID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iFuncID
		{
			get
			{
				return this._iFuncID;
			}
			set
			{
				if ((this._iFuncID != value))
				{
					if (this._iFunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniFuncIDChanging(value);
					this.SendPropertyChanging();
					this._iFuncID = value;
					this.SendPropertyChanged("iFuncID");
					this.OniFuncIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPermission", DbType="Int")]
		public System.Nullable<int> iPermission
		{
			get
			{
				return this._iPermission;
			}
			set
			{
				if ((this._iPermission != value))
				{
					this.OniPermissionChanging(value);
					this.SendPropertyChanging();
					this._iPermission = value;
					this.SendPropertyChanged("iPermission");
					this.OniPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iFunction_iUserPermission", Storage="_iFunction", ThisKey="iFuncID", OtherKey="iFuncID", IsForeignKey=true)]
		public iFunction iFunction
		{
			get
			{
				return this._iFunction.Entity;
			}
			set
			{
				iFunction previousValue = this._iFunction.Entity;
				if (((previousValue != value) 
							|| (this._iFunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iFunction.Entity = null;
						previousValue.iUserPermissions.Remove(this);
					}
					this._iFunction.Entity = value;
					if ((value != null))
					{
						value.iUserPermissions.Add(this);
						this._iFuncID = value.iFuncID;
					}
					else
					{
						this._iFuncID = default(int);
					}
					this.SendPropertyChanged("iFunction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iUser_iUserPermission", Storage="_iUser", ThisKey="iUserID", OtherKey="iUserID", IsForeignKey=true)]
		public iUser iUser
		{
			get
			{
				return this._iUser.Entity;
			}
			set
			{
				iUser previousValue = this._iUser.Entity;
				if (((previousValue != value) 
							|| (this._iUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iUser.Entity = null;
						previousValue.iUserPermissions.Remove(this);
					}
					this._iUser.Entity = value;
					if ((value != null))
					{
						value.iUserPermissions.Add(this);
						this._iUserID = value.iUserID;
					}
					else
					{
						this._iUserID = default(int);
					}
					this.SendPropertyChanged("iUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iFunction")]
	public partial class iFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iFuncID;
		
		private string _iFuncName;
		
		private EntitySet<iUserPermission> _iUserPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniFuncIDChanging(int value);
    partial void OniFuncIDChanged();
    partial void OniFuncNameChanging(string value);
    partial void OniFuncNameChanged();
    #endregion
		
		public iFunction()
		{
			this._iUserPermissions = new EntitySet<iUserPermission>(new Action<iUserPermission>(this.attach_iUserPermissions), new Action<iUserPermission>(this.detach_iUserPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFuncID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iFuncID
		{
			get
			{
				return this._iFuncID;
			}
			set
			{
				if ((this._iFuncID != value))
				{
					this.OniFuncIDChanging(value);
					this.SendPropertyChanging();
					this._iFuncID = value;
					this.SendPropertyChanged("iFuncID");
					this.OniFuncIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFuncName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string iFuncName
		{
			get
			{
				return this._iFuncName;
			}
			set
			{
				if ((this._iFuncName != value))
				{
					this.OniFuncNameChanging(value);
					this.SendPropertyChanging();
					this._iFuncName = value;
					this.SendPropertyChanged("iFuncName");
					this.OniFuncNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iFunction_iUserPermission", Storage="_iUserPermissions", ThisKey="iFuncID", OtherKey="iFuncID")]
		public EntitySet<iUserPermission> iUserPermissions
		{
			get
			{
				return this._iUserPermissions;
			}
			set
			{
				this._iUserPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iUserPermissions(iUserPermission entity)
		{
			this.SendPropertyChanging();
			entity.iFunction = this;
		}
		
		private void detach_iUserPermissions(iUserPermission entity)
		{
			this.SendPropertyChanging();
			entity.iFunction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iUser")]
	public partial class iUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iUserID;
		
		private string _iUserName;
		
		private string _iPass;
		
		private string _iEmailUser;
		
		private EntitySet<iUserPermission> _iUserPermissions;
		
		private EntitySet<iSecurityQuest> _iSecurityQuests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniUserIDChanging(int value);
    partial void OniUserIDChanged();
    partial void OniUserNameChanging(string value);
    partial void OniUserNameChanged();
    partial void OniPassChanging(string value);
    partial void OniPassChanged();
    partial void OniEmailUserChanging(string value);
    partial void OniEmailUserChanged();
    #endregion
		
		public iUser()
		{
			this._iUserPermissions = new EntitySet<iUserPermission>(new Action<iUserPermission>(this.attach_iUserPermissions), new Action<iUserPermission>(this.detach_iUserPermissions));
			this._iSecurityQuests = new EntitySet<iSecurityQuest>(new Action<iSecurityQuest>(this.attach_iSecurityQuests), new Action<iSecurityQuest>(this.detach_iSecurityQuests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iUserID
		{
			get
			{
				return this._iUserID;
			}
			set
			{
				if ((this._iUserID != value))
				{
					this.OniUserIDChanging(value);
					this.SendPropertyChanging();
					this._iUserID = value;
					this.SendPropertyChanged("iUserID");
					this.OniUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUserName", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string iUserName
		{
			get
			{
				return this._iUserName;
			}
			set
			{
				if ((this._iUserName != value))
				{
					this.OniUserNameChanging(value);
					this.SendPropertyChanging();
					this._iUserName = value;
					this.SendPropertyChanged("iUserName");
					this.OniUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string iPass
		{
			get
			{
				return this._iPass;
			}
			set
			{
				if ((this._iPass != value))
				{
					this.OniPassChanging(value);
					this.SendPropertyChanging();
					this._iPass = value;
					this.SendPropertyChanged("iPass");
					this.OniPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEmailUser", DbType="NVarChar(250)")]
		public string iEmailUser
		{
			get
			{
				return this._iEmailUser;
			}
			set
			{
				if ((this._iEmailUser != value))
				{
					this.OniEmailUserChanging(value);
					this.SendPropertyChanging();
					this._iEmailUser = value;
					this.SendPropertyChanged("iEmailUser");
					this.OniEmailUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iUser_iUserPermission", Storage="_iUserPermissions", ThisKey="iUserID", OtherKey="iUserID")]
		public EntitySet<iUserPermission> iUserPermissions
		{
			get
			{
				return this._iUserPermissions;
			}
			set
			{
				this._iUserPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iUser_iSecurityQuest", Storage="_iSecurityQuests", ThisKey="iUserID", OtherKey="iSUserID")]
		public EntitySet<iSecurityQuest> iSecurityQuests
		{
			get
			{
				return this._iSecurityQuests;
			}
			set
			{
				this._iSecurityQuests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iUserPermissions(iUserPermission entity)
		{
			this.SendPropertyChanging();
			entity.iUser = this;
		}
		
		private void detach_iUserPermissions(iUserPermission entity)
		{
			this.SendPropertyChanging();
			entity.iUser = null;
		}
		
		private void attach_iSecurityQuests(iSecurityQuest entity)
		{
			this.SendPropertyChanging();
			entity.iUser = this;
		}
		
		private void detach_iSecurityQuests(iSecurityQuest entity)
		{
			this.SendPropertyChanging();
			entity.iUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iSubject")]
	public partial class iSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iSubjectID;
		
		private string _iSubjectName;
		
		private EntitySet<iChapter> _iChapters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniSubjectIDChanging(int value);
    partial void OniSubjectIDChanged();
    partial void OniSubjectNameChanging(string value);
    partial void OniSubjectNameChanged();
    #endregion
		
		public iSubject()
		{
			this._iChapters = new EntitySet<iChapter>(new Action<iChapter>(this.attach_iChapters), new Action<iChapter>(this.detach_iChapters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSubjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iSubjectID
		{
			get
			{
				return this._iSubjectID;
			}
			set
			{
				if ((this._iSubjectID != value))
				{
					this.OniSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._iSubjectID = value;
					this.SendPropertyChanged("iSubjectID");
					this.OniSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSubjectName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string iSubjectName
		{
			get
			{
				return this._iSubjectName;
			}
			set
			{
				if ((this._iSubjectName != value))
				{
					this.OniSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._iSubjectName = value;
					this.SendPropertyChanged("iSubjectName");
					this.OniSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iSubject_iChapter", Storage="_iChapters", ThisKey="iSubjectID", OtherKey="iSubjectID")]
		public EntitySet<iChapter> iChapters
		{
			get
			{
				return this._iChapters;
			}
			set
			{
				this._iChapters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iChapters(iChapter entity)
		{
			this.SendPropertyChanging();
			entity.iSubject = this;
		}
		
		private void detach_iChapters(iChapter entity)
		{
			this.SendPropertyChanging();
			entity.iSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iChapter")]
	public partial class iChapter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iChapID;
		
		private string _iChapterNum;
		
		private string _iChapterName;
		
		private int _iSubjectID;
		
		private EntitySet<iQuestion> _iQuestions;
		
		private EntityRef<iSubject> _iSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniChapIDChanging(int value);
    partial void OniChapIDChanged();
    partial void OniChapterNumChanging(string value);
    partial void OniChapterNumChanged();
    partial void OniChapterNameChanging(string value);
    partial void OniChapterNameChanged();
    partial void OniSubjectIDChanging(int value);
    partial void OniSubjectIDChanged();
    #endregion
		
		public iChapter()
		{
			this._iQuestions = new EntitySet<iQuestion>(new Action<iQuestion>(this.attach_iQuestions), new Action<iQuestion>(this.detach_iQuestions));
			this._iSubject = default(EntityRef<iSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iChapID
		{
			get
			{
				return this._iChapID;
			}
			set
			{
				if ((this._iChapID != value))
				{
					this.OniChapIDChanging(value);
					this.SendPropertyChanging();
					this._iChapID = value;
					this.SendPropertyChanged("iChapID");
					this.OniChapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChapterNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string iChapterNum
		{
			get
			{
				return this._iChapterNum;
			}
			set
			{
				if ((this._iChapterNum != value))
				{
					this.OniChapterNumChanging(value);
					this.SendPropertyChanging();
					this._iChapterNum = value;
					this.SendPropertyChanged("iChapterNum");
					this.OniChapterNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChapterName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iChapterName
		{
			get
			{
				return this._iChapterName;
			}
			set
			{
				if ((this._iChapterName != value))
				{
					this.OniChapterNameChanging(value);
					this.SendPropertyChanging();
					this._iChapterName = value;
					this.SendPropertyChanged("iChapterName");
					this.OniChapterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSubjectID", DbType="Int NOT NULL")]
		public int iSubjectID
		{
			get
			{
				return this._iSubjectID;
			}
			set
			{
				if ((this._iSubjectID != value))
				{
					if (this._iSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._iSubjectID = value;
					this.SendPropertyChanged("iSubjectID");
					this.OniSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iChapter_iQuestion", Storage="_iQuestions", ThisKey="iChapID", OtherKey="iChapID")]
		public EntitySet<iQuestion> iQuestions
		{
			get
			{
				return this._iQuestions;
			}
			set
			{
				this._iQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iSubject_iChapter", Storage="_iSubject", ThisKey="iSubjectID", OtherKey="iSubjectID", IsForeignKey=true)]
		public iSubject iSubject
		{
			get
			{
				return this._iSubject.Entity;
			}
			set
			{
				iSubject previousValue = this._iSubject.Entity;
				if (((previousValue != value) 
							|| (this._iSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iSubject.Entity = null;
						previousValue.iChapters.Remove(this);
					}
					this._iSubject.Entity = value;
					if ((value != null))
					{
						value.iChapters.Add(this);
						this._iSubjectID = value.iSubjectID;
					}
					else
					{
						this._iSubjectID = default(int);
					}
					this.SendPropertyChanged("iSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iQuestions(iQuestion entity)
		{
			this.SendPropertyChanging();
			entity.iChapter = this;
		}
		
		private void detach_iQuestions(iQuestion entity)
		{
			this.SendPropertyChanging();
			entity.iChapter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iQuestion")]
	public partial class iQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iQuestID;
		
		private int _iLevel;
		
		private int _iChapID;
		
		private string _iBodyQuest;
		
		private string _iImageQName;
		
		private EntitySet<iAnswer> _iAnswers;
		
		private EntityRef<iChapter> _iChapter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniQuestIDChanging(int value);
    partial void OniQuestIDChanged();
    partial void OniLevelChanging(int value);
    partial void OniLevelChanged();
    partial void OniChapIDChanging(int value);
    partial void OniChapIDChanged();
    partial void OniBodyQuestChanging(string value);
    partial void OniBodyQuestChanged();
    partial void OniImageQNameChanging(string value);
    partial void OniImageQNameChanged();
    #endregion
		
		public iQuestion()
		{
			this._iAnswers = new EntitySet<iAnswer>(new Action<iAnswer>(this.attach_iAnswers), new Action<iAnswer>(this.detach_iAnswers));
			this._iChapter = default(EntityRef<iChapter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQuestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iQuestID
		{
			get
			{
				return this._iQuestID;
			}
			set
			{
				if ((this._iQuestID != value))
				{
					this.OniQuestIDChanging(value);
					this.SendPropertyChanging();
					this._iQuestID = value;
					this.SendPropertyChanged("iQuestID");
					this.OniQuestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLevel", DbType="Int NOT NULL")]
		public int iLevel
		{
			get
			{
				return this._iLevel;
			}
			set
			{
				if ((this._iLevel != value))
				{
					this.OniLevelChanging(value);
					this.SendPropertyChanging();
					this._iLevel = value;
					this.SendPropertyChanged("iLevel");
					this.OniLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChapID", DbType="Int NOT NULL")]
		public int iChapID
		{
			get
			{
				return this._iChapID;
			}
			set
			{
				if ((this._iChapID != value))
				{
					if (this._iChapter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniChapIDChanging(value);
					this.SendPropertyChanging();
					this._iChapID = value;
					this.SendPropertyChanged("iChapID");
					this.OniChapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iBodyQuest", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iBodyQuest
		{
			get
			{
				return this._iBodyQuest;
			}
			set
			{
				if ((this._iBodyQuest != value))
				{
					this.OniBodyQuestChanging(value);
					this.SendPropertyChanging();
					this._iBodyQuest = value;
					this.SendPropertyChanged("iBodyQuest");
					this.OniBodyQuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iImageQName", DbType="NVarChar(MAX)")]
		public string iImageQName
		{
			get
			{
				return this._iImageQName;
			}
			set
			{
				if ((this._iImageQName != value))
				{
					this.OniImageQNameChanging(value);
					this.SendPropertyChanging();
					this._iImageQName = value;
					this.SendPropertyChanged("iImageQName");
					this.OniImageQNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iQuestion_iAnswer", Storage="_iAnswers", ThisKey="iQuestID", OtherKey="iQuestID")]
		public EntitySet<iAnswer> iAnswers
		{
			get
			{
				return this._iAnswers;
			}
			set
			{
				this._iAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iChapter_iQuestion", Storage="_iChapter", ThisKey="iChapID", OtherKey="iChapID", IsForeignKey=true)]
		public iChapter iChapter
		{
			get
			{
				return this._iChapter.Entity;
			}
			set
			{
				iChapter previousValue = this._iChapter.Entity;
				if (((previousValue != value) 
							|| (this._iChapter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iChapter.Entity = null;
						previousValue.iQuestions.Remove(this);
					}
					this._iChapter.Entity = value;
					if ((value != null))
					{
						value.iQuestions.Add(this);
						this._iChapID = value.iChapID;
					}
					else
					{
						this._iChapID = default(int);
					}
					this.SendPropertyChanged("iChapter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iAnswers(iAnswer entity)
		{
			this.SendPropertyChanging();
			entity.iQuestion = this;
		}
		
		private void detach_iAnswers(iAnswer entity)
		{
			this.SendPropertyChanging();
			entity.iQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iAnswer")]
	public partial class iAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iAnsID;
		
		private int _iQuestID;
		
		private char _iProperty;
		
		private string _iBodyAns;
		
		private EntityRef<iQuestion> _iQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniAnsIDChanging(int value);
    partial void OniAnsIDChanged();
    partial void OniQuestIDChanging(int value);
    partial void OniQuestIDChanged();
    partial void OniPropertyChanging(char value);
    partial void OniPropertyChanged();
    partial void OniBodyAnsChanging(string value);
    partial void OniBodyAnsChanged();
    #endregion
		
		public iAnswer()
		{
			this._iQuestion = default(EntityRef<iQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAnsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iAnsID
		{
			get
			{
				return this._iAnsID;
			}
			set
			{
				if ((this._iAnsID != value))
				{
					this.OniAnsIDChanging(value);
					this.SendPropertyChanging();
					this._iAnsID = value;
					this.SendPropertyChanged("iAnsID");
					this.OniAnsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQuestID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iQuestID
		{
			get
			{
				return this._iQuestID;
			}
			set
			{
				if ((this._iQuestID != value))
				{
					if (this._iQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniQuestIDChanging(value);
					this.SendPropertyChanging();
					this._iQuestID = value;
					this.SendPropertyChanged("iQuestID");
					this.OniQuestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iProperty", DbType="Char(1) NOT NULL")]
		public char iProperty
		{
			get
			{
				return this._iProperty;
			}
			set
			{
				if ((this._iProperty != value))
				{
					this.OniPropertyChanging(value);
					this.SendPropertyChanging();
					this._iProperty = value;
					this.SendPropertyChanged("iProperty");
					this.OniPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iBodyAns", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iBodyAns
		{
			get
			{
				return this._iBodyAns;
			}
			set
			{
				if ((this._iBodyAns != value))
				{
					this.OniBodyAnsChanging(value);
					this.SendPropertyChanging();
					this._iBodyAns = value;
					this.SendPropertyChanged("iBodyAns");
					this.OniBodyAnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iQuestion_iAnswer", Storage="_iQuestion", ThisKey="iQuestID", OtherKey="iQuestID", IsForeignKey=true)]
		public iQuestion iQuestion
		{
			get
			{
				return this._iQuestion.Entity;
			}
			set
			{
				iQuestion previousValue = this._iQuestion.Entity;
				if (((previousValue != value) 
							|| (this._iQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iQuestion.Entity = null;
						previousValue.iAnswers.Remove(this);
					}
					this._iQuestion.Entity = value;
					if ((value != null))
					{
						value.iAnswers.Add(this);
						this._iQuestID = value.iQuestID;
					}
					else
					{
						this._iQuestID = default(int);
					}
					this.SendPropertyChanged("iQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iSecurityQuest")]
	public partial class iSecurityQuest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iSID;
		
		private string _iSQuest;
		
		private string _iSAns;
		
		private int _iSUserID;
		
		private EntityRef<iUser> _iUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniSIDChanging(int value);
    partial void OniSIDChanged();
    partial void OniSQuestChanging(string value);
    partial void OniSQuestChanged();
    partial void OniSAnsChanging(string value);
    partial void OniSAnsChanged();
    partial void OniSUserIDChanging(int value);
    partial void OniSUserIDChanged();
    #endregion
		
		public iSecurityQuest()
		{
			this._iUser = default(EntityRef<iUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iSID
		{
			get
			{
				return this._iSID;
			}
			set
			{
				if ((this._iSID != value))
				{
					this.OniSIDChanging(value);
					this.SendPropertyChanging();
					this._iSID = value;
					this.SendPropertyChanged("iSID");
					this.OniSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSQuest", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iSQuest
		{
			get
			{
				return this._iSQuest;
			}
			set
			{
				if ((this._iSQuest != value))
				{
					this.OniSQuestChanging(value);
					this.SendPropertyChanging();
					this._iSQuest = value;
					this.SendPropertyChanged("iSQuest");
					this.OniSQuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSAns", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iSAns
		{
			get
			{
				return this._iSAns;
			}
			set
			{
				if ((this._iSAns != value))
				{
					this.OniSAnsChanging(value);
					this.SendPropertyChanging();
					this._iSAns = value;
					this.SendPropertyChanged("iSAns");
					this.OniSAnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSUserID", DbType="Int NOT NULL")]
		public int iSUserID
		{
			get
			{
				return this._iSUserID;
			}
			set
			{
				if ((this._iSUserID != value))
				{
					if (this._iUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSUserIDChanging(value);
					this.SendPropertyChanging();
					this._iSUserID = value;
					this.SendPropertyChanged("iSUserID");
					this.OniSUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iUser_iSecurityQuest", Storage="_iUser", ThisKey="iSUserID", OtherKey="iUserID", IsForeignKey=true)]
		public iUser iUser
		{
			get
			{
				return this._iUser.Entity;
			}
			set
			{
				iUser previousValue = this._iUser.Entity;
				if (((previousValue != value) 
							|| (this._iUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iUser.Entity = null;
						previousValue.iSecurityQuests.Remove(this);
					}
					this._iUser.Entity = value;
					if ((value != null))
					{
						value.iSecurityQuests.Add(this);
						this._iSUserID = value.iUserID;
					}
					else
					{
						this._iSUserID = default(int);
					}
					this.SendPropertyChanged("iUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class st_GetUserInfoResult
	{
		
		private int _iUserID;
		
		private string _iUserName;
		
		private string _iPass;
		
		private string _iEmailUser;
		
		public st_GetUserInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUserID", DbType="Int NOT NULL")]
		public int iUserID
		{
			get
			{
				return this._iUserID;
			}
			set
			{
				if ((this._iUserID != value))
				{
					this._iUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUserName", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string iUserName
		{
			get
			{
				return this._iUserName;
			}
			set
			{
				if ((this._iUserName != value))
				{
					this._iUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string iPass
		{
			get
			{
				return this._iPass;
			}
			set
			{
				if ((this._iPass != value))
				{
					this._iPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEmailUser", DbType="NVarChar(250)")]
		public string iEmailUser
		{
			get
			{
				return this._iEmailUser;
			}
			set
			{
				if ((this._iEmailUser != value))
				{
					this._iEmailUser = value;
				}
			}
		}
	}
	
	public partial class st_LoadBodyAnswersResult
	{
		
		private string _iBodyAns;
		
		public st_LoadBodyAnswersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iBodyAns", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iBodyAns
		{
			get
			{
				return this._iBodyAns;
			}
			set
			{
				if ((this._iBodyAns != value))
				{
					this._iBodyAns = value;
				}
			}
		}
	}
	
	public partial class st_LoadBodyQuestOfSubResult
	{
		
		private string _Body_of_Question;
		
		public st_LoadBodyQuestOfSubResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Body of Question]", Storage="_Body_of_Question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body_of_Question
		{
			get
			{
				return this._Body_of_Question;
			}
			set
			{
				if ((this._Body_of_Question != value))
				{
					this._Body_of_Question = value;
				}
			}
		}
	}
	
	public partial class st_LoadChapNameResult
	{
		
		private string _iChapterName;
		
		public st_LoadChapNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChapterName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string iChapterName
		{
			get
			{
				return this._iChapterName;
			}
			set
			{
				if ((this._iChapterName != value))
				{
					this._iChapterName = value;
				}
			}
		}
	}
	
	public partial class st_SelectAllQuestResult
	{
		
		private string _Questions;
		
		private string _Level;
		
		private string _Chapter_Index;
		
		private string _Chapter_Name;
		
		public st_SelectAllQuestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questions", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				if ((this._Questions != value))
				{
					this._Questions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Index]", Storage="_Chapter_Index", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Chapter_Index
		{
			get
			{
				return this._Chapter_Index;
			}
			set
			{
				if ((this._Chapter_Index != value))
				{
					this._Chapter_Index = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Name]", Storage="_Chapter_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Chapter_Name
		{
			get
			{
				return this._Chapter_Name;
			}
			set
			{
				if ((this._Chapter_Name != value))
				{
					this._Chapter_Name = value;
				}
			}
		}
	}
	
	public partial class st_ViewQuestOfAllSubResult
	{
		
		private string _Questions;
		
		private int _Level;
		
		private string _Subject_Name;
		
		private string _Chapter_Index;
		
		private string _Chapter_Name;
		
		private string _Image;
		
		public st_ViewQuestOfAllSubResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questions", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				if ((this._Questions != value))
				{
					this._Questions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Subject Name]", Storage="_Subject_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subject_Name
		{
			get
			{
				return this._Subject_Name;
			}
			set
			{
				if ((this._Subject_Name != value))
				{
					this._Subject_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Index]", Storage="_Chapter_Index", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Chapter_Index
		{
			get
			{
				return this._Chapter_Index;
			}
			set
			{
				if ((this._Chapter_Index != value))
				{
					this._Chapter_Index = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Name]", Storage="_Chapter_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Chapter_Name
		{
			get
			{
				return this._Chapter_Name;
			}
			set
			{
				if ((this._Chapter_Name != value))
				{
					this._Chapter_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
	}
	
	public partial class st_SelectQuestResult
	{
		
		private string _Questions;
		
		private string _Subject;
		
		private string _Chapter_Number;
		
		private string _Chapter_Name;
		
		private int _Level;
		
		private string _Image;
		
		public st_SelectQuestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questions", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				if ((this._Questions != value))
				{
					this._Questions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Number]", Storage="_Chapter_Number", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Chapter_Number
		{
			get
			{
				return this._Chapter_Number;
			}
			set
			{
				if ((this._Chapter_Number != value))
				{
					this._Chapter_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chapter Name]", Storage="_Chapter_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Chapter_Name
		{
			get
			{
				return this._Chapter_Name;
			}
			set
			{
				if ((this._Chapter_Name != value))
				{
					this._Chapter_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
